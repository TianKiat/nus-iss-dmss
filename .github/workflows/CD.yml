name: CD

on:
  push:
    branches:
      - releases

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2
      - name: Create PEM files for SCP
        run: |
          echo "${{ secrets.EC2_FE_PRIVATE_KEY }}" > webapp-private-key.pem
          chmod 400  webapp-private-key.pem
          echo "${{ secrets.EC2_BE_PRIVATE_KEY }}" > webapi-private-key.pem
          chmod 400  webapi-private-key.pem
      - name: Copy Frontend Application to EC2
        run: |
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i webapp-private-key.pem -r ./frontend ubuntu@${{ secrets.EC2_FE_PUBLIC_IP }}:~/

      - name: Copy Backend Application to EC2
        run: |
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i webapi-private-key.pem -r ./backend ubuntu@${{ secrets.EC2_BE_PUBLIC_IP }}:~/

      - name: Copy GitHub Secrets env variables to EC2 for FE
        run: |
          echo "VITE_APP_NAME=${{ secrets.VITE_APP_NAME }}" >> .env
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> .env
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i webapp-private-key.pem .env ubuntu@${{ secrets.EC2_FE_PUBLIC_IP }}:~/frontend

      - name: Copy GitHub Secrets env variables to EC2 for BE
        run: |
          echo "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }}" >> .env
          echo "FASTAPI_URL=${{ secrets.FASTAPI_URL }}" >> .env
          echo "FASTAPI_URL_PORT=${{ secrets.FASTAPI_URL_PORT }}" >> .env
          echo "OTP_EMAIL=${{ secrets.OTP_EMAIL }}" >> .env
          echo "OTP_EMAIL_PASSWORD=${{ secrets.OTP_EMAIL_PASSWORD }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> .env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> .env
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i webapi-private-key.pem .env ubuntu@${{ secrets.EC2_BE_PUBLIC_IP }}:~/backend

      - name: SSH into EC2 and Deploy FE
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i webapp-private-key.pem ubuntu@${{ secrets.EC2_FE_PUBLIC_IP }} "cd ~/frontend && pnpm run build && cd && sudo cp -r frontend/dist/* /var/www/dmss_domain.com/html && sudo systemctl reload nginx"

      - name: Check for existing Python Process and end any if found
        run: |
          if pgrep -f "python3 run.py"; then
            echo "Python process is already running, stopping it..."
            pkill -f "python3 run.py"
          else
            echo "No existing Python process found."
          fi
      - name: SSH into EC2 and Deploy BE
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i webapi-private-key.pem ubuntu@${{ secrets.EC2_BE_PUBLIC_IP }} "cd ~/backend && nohup python3 run.py &"
