"""new db init

Revision ID: 355d9fe2b688
Revises: 
Create Date: 2023-09-16 15:42:20.551905

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '355d9fe2b688'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('access',
    sa.Column('accessID', sa.Integer(), nullable=False),
    sa.Column('accessName', sa.String(length=64), nullable=False),
    sa.Column('accessURL', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('accessID')
    )
    op.create_table('promotion',
    sa.Column('promotionID', sa.Integer(), nullable=False),
    sa.Column('promoCode', sa.String(length=16), nullable=False),
    sa.Column('discount', sa.Double(), nullable=False),
    sa.Column('minimumSpending', sa.Double(), nullable=False),
    sa.Column('isValid', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('promotionID'),
    sa.UniqueConstraint('promoCode')
    )
    op.create_table('role',
    sa.Column('roleID', sa.Integer(), nullable=False),
    sa.Column('roleName', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('roleID')
    )
    op.create_table('access_control',
    sa.Column('accessControlID', sa.Integer(), nullable=False),
    sa.Column('accessID', sa.Integer(), nullable=False),
    sa.Column('roleID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['accessID'], ['access.accessID'], ),
    sa.ForeignKeyConstraint(['roleID'], ['role.roleID'], ),
    sa.PrimaryKeyConstraint('accessControlID')
    )
    op.create_table('user',
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=False),
    sa.Column('userPassword', sa.String(length=255), nullable=False),
    sa.Column('roleID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['roleID'], ['role.roleID'], ),
    sa.PrimaryKeyConstraint('userID'),
    sa.UniqueConstraint('username')
    )
    op.create_table('user_profile',
    sa.Column('userProfileID', sa.Integer(), nullable=False),
    sa.Column('profileName', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('phone', sa.CHAR(length=8), nullable=False),
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userID'], ['user.userID'], ),
    sa.PrimaryKeyConstraint('userProfileID'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('userID')
    )
    op.create_table('vendor_profile',
    sa.Column('vendorProfileID', sa.Integer(), nullable=False),
    sa.Column('profileName', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('phone', sa.CHAR(length=8), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userID'], ['user.userID'], ),
    sa.PrimaryKeyConstraint('vendorProfileID'),
    sa.UniqueConstraint('address'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('userID')
    )
    op.create_table('invoice',
    sa.Column('invoiceID', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('totalPrice', sa.Double(), nullable=False),
    sa.Column('discount', sa.Double(), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('isFavorite', sa.Boolean(), nullable=False),
    sa.Column('customerProfileID', sa.Integer(), nullable=False),
    sa.Column('vendorProfileID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customerProfileID'], ['user_profile.userProfileID'], ),
    sa.ForeignKeyConstraint(['vendorProfileID'], ['vendor_profile.vendorProfileID'], ),
    sa.PrimaryKeyConstraint('invoiceID')
    )
    op.create_table('menuitem',
    sa.Column('menuItemID', sa.Integer(), nullable=False),
    sa.Column('menuItemName', sa.String(length=50), nullable=False),
    sa.Column('price', sa.Double(), nullable=False),
    sa.Column('menuItemImage', sa.BLOB(length=500), nullable=True),
    sa.Column('menuItemDesc', sa.String(length=250), nullable=True),
    sa.Column('isValid', sa.Boolean(), nullable=False),
    sa.Column('vendorProfileID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['vendorProfileID'], ['vendor_profile.vendorProfileID'], ),
    sa.PrimaryKeyConstraint('menuItemID'),
    sa.UniqueConstraint('menuItemName', 'vendorProfileID')
    )
    op.create_table('order',
    sa.Column('orderID', sa.Integer(), nullable=False),
    sa.Column('menuItemID', sa.Integer(), nullable=False),
    sa.Column('foodName', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Double(), nullable=False),
    sa.Column('invoiceID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['invoiceID'], ['invoice.invoiceID'], ),
    sa.PrimaryKeyConstraint('orderID'),
    sa.UniqueConstraint('invoiceID', 'menuItemID')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order')
    op.drop_table('menuitem')
    op.drop_table('invoice')
    op.drop_table('vendor_profile')
    op.drop_table('user_profile')
    op.drop_table('user')
    op.drop_table('access_control')
    op.drop_table('role')
    op.drop_table('promotion')
    op.drop_table('access')
    # ### end Alembic commands ###
